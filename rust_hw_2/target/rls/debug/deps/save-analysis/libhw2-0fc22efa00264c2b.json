{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/welby/Downloads/rust_hw_2","program":"/Users/welby/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":[],"output":"/Users/welby/Downloads/rust_hw_2/target/rls/debug/deps/libhw2-0fc22efa00264c2b.rmeta"},"prelude":{"crate_id":{"name":"hw2","disambiguator":[13947127040250166961,10455716040778814138]},"crate_root":"src","external_crates":[{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/welby/Downloads/rust_hw_2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}}],"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":1757,"line_start":1,"line_end":56,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":1757,"line_start":1,"line_end":56,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":5},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":25},{"krate":0,"index":3},{"krate":0,"index":4}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6},"span":{"file_name":"src/lib.rs","byte_start":38,"byte_end":42,"line_start":3,"line_end":3,"column_start":5,"column_end":9},"name":"Blue","qualname":"::Color::Blue","value":"Color::Blue","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8},"span":{"file_name":"src/lib.rs","byte_start":48,"byte_end":54,"line_start":4,"line_end":4,"column_start":5,"column_end":11},"name":"Orange","qualname":"::Color::Orange","value":"Color::Orange","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10},"span":{"file_name":"src/lib.rs","byte_start":60,"byte_end":63,"line_start":5,"line_end":5,"column_start":5,"column_end":8},"name":"Red","qualname":"::Color::Red","value":"Color::Red","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12},"span":{"file_name":"src/lib.rs","byte_start":69,"byte_end":74,"line_start":6,"line_end":6,"column_start":5,"column_end":10},"name":"Green","qualname":"::Color::Green","value":"Color::Green","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":14},"span":{"file_name":"src/lib.rs","byte_start":80,"byte_end":86,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Yellow","qualname":"::Color::Yellow","value":"Color::Yellow","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":16},"span":{"file_name":"src/lib.rs","byte_start":92,"byte_end":98,"line_start":8,"line_end":8,"column_start":5,"column_end":11},"name":"Purple","qualname":"::Color::Purple","value":"Color::Purple","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5},"span":{"file_name":"src/lib.rs","byte_start":26,"byte_end":31,"line_start":2,"line_end":2,"column_start":10,"column_end":15},"name":"Color","qualname":"::Color","value":"pub enum Color { Blue, Orange, Red, Green, Yellow, Purple, }","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":21},"span":{"file_name":"src/lib.rs","byte_start":145,"byte_end":157,"line_start":13,"line_end":13,"column_start":5,"column_end":17},"name":"InvalidColor","qualname":"::ColorError::InvalidColor","value":"ColorError::InvalidColor","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":23},"span":{"file_name":"src/lib.rs","byte_start":163,"byte_end":173,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"EmptyColor","qualname":"::ColorError::EmptyColor","value":"ColorError::EmptyColor","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":20},"span":{"file_name":"src/lib.rs","byte_start":128,"byte_end":138,"line_start":12,"line_end":12,"column_start":10,"column_end":20},"name":"ColorError","qualname":"::ColorError","value":"pub enum ColorError { InvalidColor, EmptyColor, }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741827},"span":{"file_name":"src/lib.rs","byte_start":565,"byte_end":570,"line_start":22,"line_end":22,"column_start":29,"column_end":34},"name":"color","qualname":"::color_string_to_enum::color","value":"std::option::Option<std::string::String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3},"span":{"file_name":"src/lib.rs","byte_start":544,"byte_end":564,"line_start":22,"line_end":22,"column_start":8,"column_end":28},"name":"color_string_to_enum","qualname":"::color_string_to_enum","value":"pub fn color_string_to_enum(Option<String>) -> Result<Color, ColorError>","parent":null,"children":[],"decl_id":null,"docs":" TODO: Implement this function\n You must return a Result<Color, ColorError> based on the Option<String> passed in\n There are a number of options for the color so make sure to use a match statement\n If the color String is invalid (doesn't match with the enum), return an Err(InvalidColor)\n If the color Stirng is empty, return an Err(EmptyColor)\n","sig":null,"attributes":[{"value":"/ TODO: Implement this function","span":{"file_name":"src/lib.rs","byte_start":177,"byte_end":210,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ You must return a Result<Color, ColorError> based on the Option<String> passed in","span":{"file_name":"src/lib.rs","byte_start":211,"byte_end":296,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/ There are a number of options for the color so make sure to use a match statement","span":{"file_name":"src/lib.rs","byte_start":297,"byte_end":382,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/ If the color String is invalid (doesn't match with the enum), return an Err(InvalidColor)","span":{"file_name":"src/lib.rs","byte_start":383,"byte_end":476,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/ If the color Stirng is empty, return an Err(EmptyColor)","span":{"file_name":"src/lib.rs","byte_start":477,"byte_end":536,"line_start":21,"line_end":21,"column_start":1,"column_end":60}}]},{"kind":"Local","id":{"krate":0,"index":1073741828},"span":{"file_name":"src/lib.rs","byte_start":954,"byte_end":960,"line_start":31,"line_end":31,"column_start":26,"column_end":32},"name":"target","qualname":"::fibonacci_odd_sum::target","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4},"span":{"file_name":"src/lib.rs","byte_start":936,"byte_end":953,"line_start":31,"line_end":31,"column_start":8,"column_end":25},"name":"fibonacci_odd_sum","qualname":"::fibonacci_odd_sum","value":"pub fn fibonacci_odd_sum(i32) -> Option<(i32, i32)>","parent":null,"children":[],"decl_id":null,"docs":" TODO: Implement this function\n You must find the Fibonacci sequence of numbers not exceding the number passed in\n Return the sum of the odd-valued numbers in the sequence as an Option<i32>\n If the number passed in is less than or equal to 0, return None\n","sig":null,"attributes":[{"value":"/ TODO: Implement this function","span":{"file_name":"src/lib.rs","byte_start":662,"byte_end":695,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/ You must find the Fibonacci sequence of numbers not exceding the number passed in","span":{"file_name":"src/lib.rs","byte_start":696,"byte_end":781,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/ Return the sum of the odd-valued numbers in the sequence as an Option<i32>","span":{"file_name":"src/lib.rs","byte_start":782,"byte_end":860,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ If the number passed in is less than or equal to 0, return None","span":{"file_name":"src/lib.rs","byte_start":861,"byte_end":928,"line_start":30,"line_end":30,"column_start":1,"column_end":68}}]}],"impls":[],"refs":[{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":572,"byte_end":578,"line_start":22,"line_end":22,"column_start":36,"column_end":42},"ref_id":{"krate":2,"index":37335}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":579,"byte_end":585,"line_start":22,"line_end":22,"column_start":43,"column_end":49},"ref_id":{"krate":5,"index":7216}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":591,"byte_end":597,"line_start":22,"line_end":22,"column_start":55,"column_end":61},"ref_id":{"krate":2,"index":37485}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":598,"byte_end":603,"line_start":22,"line_end":22,"column_start":62,"column_end":67},"ref_id":{"krate":0,"index":5}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":605,"byte_end":615,"line_start":22,"line_end":22,"column_start":69,"column_end":79},"ref_id":{"krate":0,"index":20}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":970,"byte_end":976,"line_start":31,"line_end":31,"column_start":42,"column_end":48},"ref_id":{"krate":2,"index":37335}}],"macro_refs":[],"relations":[]}