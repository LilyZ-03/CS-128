{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/welby/c/school/cs128/rust_hw_4","program":"/Users/welby/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":[],"output":"/Users/welby/c/school/cs128/rust_hw_4/target/rls/debug/deps/libhw4-0b38b5308054c1a3.rmeta"},"prelude":{"crate_id":{"name":"hw4","disambiguator":[9143521970016768285,4296278907851378885]},"crate_root":"src","external_crates":[{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":16,"id":{"name":"test","disambiguator":[5568651502090129804,7601781075051519962]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":17,"id":{"name":"getopts","disambiguator":[4467488556284040664,14752856029059701235]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":18,"id":{"name":"rustc_std_workspace_std","disambiguator":[10383272901569367485,2183551964930116157]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":19,"id":{"name":"unicode_width","disambiguator":[4304159073849980720,4706093947982292948]}},{"file_name":"/Users/welby/c/school/cs128/rust_hw_4/src/lib.rs","num":20,"id":{"name":"term","disambiguator":[13402756353203699848,15287256508391871388]}}],"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":1744,"line_start":1,"line_end":41,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"src/lib.rs","byte_start":1324,"byte_end":1325,"line_start":31,"line_end":31,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"vector_iter","parent":{"krate":0,"index":6}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":1744,"line_start":1,"line_end":41,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":12}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741827},"span":{"file_name":"src/lib.rs","byte_start":453,"byte_end":458,"line_start":7,"line_end":7,"column_start":20,"column_end":25},"name":"words","qualname":"::vector_iter::words","value":"&mut std::vec::Vec<std::string::String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3},"span":{"file_name":"src/lib.rs","byte_start":441,"byte_end":452,"line_start":7,"line_end":7,"column_start":8,"column_end":19},"name":"vector_iter","qualname":"::vector_iter","value":"pub fn vector_iter(&mut Vec<String>) -> (Vec<String>, i32)","parent":null,"children":[],"decl_id":null,"docs":" TODO: Implement this function that passes a mutable Vector of Strings\n You must iterate through the vector. \n If the word has an even number of characters, reverse the word by using the reverse function.\n If the word has an odd number of characters, count the number of vowels in the word.\n You should return a tuple containg a Vector of the reversed words \n and the total number of vowels from odd lengthed words.\n","sig":null,"attributes":[{"value":"/ TODO: Implement this function that passes a mutable Vector of Strings","span":{"file_name":"src/lib.rs","byte_start":0,"byte_end":73,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ You must iterate through the vector. ","span":{"file_name":"src/lib.rs","byte_start":74,"byte_end":115,"line_start":2,"line_end":2,"column_start":1,"column_end":42}},{"value":"/ If the word has an even number of characters, reverse the word by using the reverse function.","span":{"file_name":"src/lib.rs","byte_start":116,"byte_end":213,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ If the word has an odd number of characters, count the number of vowels in the word.","span":{"file_name":"src/lib.rs","byte_start":214,"byte_end":302,"line_start":4,"line_end":4,"column_start":1,"column_end":89}},{"value":"/ You should return a tuple containg a Vector of the reversed words ","span":{"file_name":"src/lib.rs","byte_start":303,"byte_end":373,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ and the total number of vowels from odd lengthed words.","span":{"file_name":"src/lib.rs","byte_start":374,"byte_end":433,"line_start":6,"line_end":6,"column_start":1,"column_end":60}}]},{"kind":"Local","id":{"krate":0,"index":1073741828},"span":{"file_name":"src/lib.rs","byte_start":676,"byte_end":680,"line_start":13,"line_end":13,"column_start":21,"column_end":25},"name":"word","qualname":"::reverse_word::word","value":"&mut std::string::String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4},"span":{"file_name":"src/lib.rs","byte_start":663,"byte_end":675,"line_start":13,"line_end":13,"column_start":8,"column_end":20},"name":"reverse_word","qualname":"::reverse_word","value":"pub fn reverse_word(&mut String)","parent":null,"children":[],"decl_id":null,"docs":" TODO: Implement this function that takes a String and reverses it.\n This should directly modify the contents of the passed String.\n","sig":null,"attributes":[{"value":"/ TODO: Implement this function that takes a String and reverses it.","span":{"file_name":"src/lib.rs","byte_start":518,"byte_end":588,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ This should directly modify the contents of the passed String.","span":{"file_name":"src/lib.rs","byte_start":589,"byte_end":655,"line_start":12,"line_end":12,"column_start":1,"column_end":67}}]},{"kind":"Local","id":{"krate":0,"index":1073741829},"span":{"file_name":"src/lib.rs","byte_start":1076,"byte_end":1080,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"name":"word","qualname":"::count_vowels::word","value":"&str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5},"span":{"file_name":"src/lib.rs","byte_start":1063,"byte_end":1075,"line_start":22,"line_end":22,"column_start":8,"column_end":20},"name":"count_vowels","qualname":"::count_vowels","value":"pub fn count_vowels(&str) -> i32","parent":null,"children":[],"decl_id":null,"docs":" TODO: Implement this function that takes a String and counts the number of vowels in it.\n In this instance, we mean the vowels a, e, i, o, and u. Do not worry about y.\n You will need to handle words with upper and lower case vowels.\n You should not modify the contents of the passed String.\n You should return the vowel count.\n","sig":null,"attributes":[{"value":"/ TODO: Implement this function that takes a String and counts the number of vowels in it.","span":{"file_name":"src/lib.rs","byte_start":713,"byte_end":805,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ In this instance, we mean the vowels a, e, i, o, and u. Do not worry about y.","span":{"file_name":"src/lib.rs","byte_start":806,"byte_end":887,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/ You will need to handle words with upper and lower case vowels.","span":{"file_name":"src/lib.rs","byte_start":888,"byte_end":955,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ You should not modify the contents of the passed String.","span":{"file_name":"src/lib.rs","byte_start":956,"byte_end":1016,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/ You should return the vowel count.","span":{"file_name":"src/lib.rs","byte_start":1017,"byte_end":1055,"line_start":21,"line_end":21,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"src/lib.rs","byte_start":1302,"byte_end":1306,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"test","qualname":"::test","value":"src/lib.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":11}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(test)","span":{"file_name":"src/lib.rs","byte_start":1285,"byte_end":1297,"line_start":29,"line_end":29,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"src/lib.rs","byte_start":1351,"byte_end":1367,"line_start":34,"line_end":34,"column_start":8,"column_end":24},"name":"test_vector_iter","qualname":"::test::test_vector_iter","value":"fn test_vector_iter()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1140850699},"span":{"file_name":"src/lib.rs","byte_start":1384,"byte_end":1389,"line_start":35,"line_end":35,"column_start":13,"column_end":18},"name":"words","qualname":"words$HirId { owner: DefId(0:11 ~ hw4[7ee4]::test::test_vector_iter#1), local_id: 34 }","value":"&mut std::vec::Vec<std::string::String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1409286155},"span":{"file_name":"src/lib.rs","byte_start":1555,"byte_end":1569,"line_start":36,"line_end":36,"column_start":14,"column_end":28},"name":"reversed_words","qualname":"reversed_words$HirId { owner: DefId(0:11 ~ hw4[7ee4]::test::test_vector_iter#1), local_id: 42 }","value":"std::vec::Vec<std::string::String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":3556769803},"span":{"file_name":"src/lib.rs","byte_start":1571,"byte_end":1576,"line_start":36,"line_end":36,"column_start":30,"column_end":35},"name":"count","qualname":"count$HirId { owner: DefId(0:11 ~ hw4[7ee4]::test::test_vector_iter#1), local_id: 43 }","value":"i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":465,"byte_end":468,"line_start":7,"line_end":7,"column_start":32,"column_end":35},"ref_id":{"krate":5,"index":6703}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":469,"byte_end":475,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"ref_id":{"krate":5,"index":7216}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":482,"byte_end":485,"line_start":7,"line_end":7,"column_start":49,"column_end":52},"ref_id":{"krate":5,"index":6703}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":486,"byte_end":492,"line_start":7,"line_end":7,"column_start":53,"column_end":59},"ref_id":{"krate":5,"index":7216}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":687,"byte_end":693,"line_start":13,"line_end":13,"column_start":32,"column_end":38},"ref_id":{"krate":5,"index":7216}},{"kind":"Mod","span":{"file_name":"src/lib.rs","byte_start":1317,"byte_end":1322,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":0}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":1396,"byte_end":1399,"line_start":35,"line_end":35,"column_start":25,"column_end":28},"ref_id":{"krate":5,"index":6703}},{"kind":"Type","span":{"file_name":"src/lib.rs","byte_start":1400,"byte_end":1406,"line_start":35,"line_end":35,"column_start":29,"column_end":35},"ref_id":{"krate":5,"index":7216}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1427,"byte_end":1436,"line_start":35,"line_end":35,"column_start":56,"column_end":65},"ref_id":{"krate":5,"index":5391}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1446,"byte_end":1455,"line_start":35,"line_end":35,"column_start":75,"column_end":84},"ref_id":{"krate":5,"index":5391}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1470,"byte_end":1479,"line_start":35,"line_end":35,"column_start":99,"column_end":108},"ref_id":{"krate":5,"index":5391}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1489,"byte_end":1498,"line_start":35,"line_end":35,"column_start":118,"column_end":127},"ref_id":{"krate":5,"index":5391}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1509,"byte_end":1518,"line_start":35,"line_end":35,"column_start":138,"column_end":147},"ref_id":{"krate":5,"index":5391}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1528,"byte_end":1537,"line_start":35,"line_end":35,"column_start":157,"column_end":166},"ref_id":{"krate":5,"index":5391}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1580,"byte_end":1591,"line_start":36,"line_end":36,"column_start":39,"column_end":50},"ref_id":{"krate":0,"index":3}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":1592,"byte_end":1597,"line_start":36,"line_end":36,"column_start":51,"column_end":56},"ref_id":{"krate":0,"index":1140850699}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":1619,"byte_end":1633,"line_start":37,"line_end":37,"column_start":20,"column_end":34},"ref_id":{"krate":0,"index":1409286155}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1647,"byte_end":1656,"line_start":37,"line_end":37,"column_start":48,"column_end":57},"ref_id":{"krate":5,"index":5391}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1671,"byte_end":1680,"line_start":37,"line_end":37,"column_start":72,"column_end":81},"ref_id":{"krate":5,"index":5391}},{"kind":"Function","span":{"file_name":"src/lib.rs","byte_start":1691,"byte_end":1700,"line_start":37,"line_end":37,"column_start":92,"column_end":101},"ref_id":{"krate":5,"index":5391}},{"kind":"Variable","span":{"file_name":"src/lib.rs","byte_start":1725,"byte_end":1730,"line_start":38,"line_end":38,"column_start":20,"column_end":25},"ref_id":{"krate":0,"index":3556769803}}],"macro_refs":[],"relations":[]}